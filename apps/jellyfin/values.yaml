######################
# Jellyfin           #
######################

jellyfin:
  global:
    nameOverride: jellyfin
  controller:
    strategy: RollingUpdate
  image:
    repository: ghcr.io/linuxserver/jellyfin
    tag: version-10.8.10-1
  env:
    TZ: "Europe/Berlin"
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 50Gi
      annotations:
        'k8up.io/backup': 'true'
    filme:
      enabled: true
      storageClass: truenas-nfs
      accessMode: ReadWriteMany
      size: 1Ti
      mountPath: /filme
      annotations:
        'k8up.io/backup': 'false'
    serien:
      enabled: true
      storageClass: truenas-nfs
      accessMode: ReadWriteMany
      size: 1.5Ti
      mountPath: /serien
      annotations:
        'k8up.io/backup': 'false'
  service:
    main:
      ports:
        http:
          port: &port 8096
  probes:
    liveness: &probes
      enabled: true
      custom: true
      spec:
        httpGet:
          path: /health
          port: *port
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3
    readiness: *probes
    startup:
      enabled: false
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        external-dns.alpha.kubernetes.io/target: "ipv4.serverton.de"
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host "jellyfin.serverton.de"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: jellyfin-tls-certificate
          hosts:
            - *host
  resources:
    requests: 
      gpu.intel.com/i915: "1" 
    limits: 
      gpu.intel.com/i915: "1"


######################
# Jellyseerr         #
######################

jellyseerr:
  global:
    nameOverride: jellyseerr
  controller:
    strategy: RollingUpdate
  image:
    repository: fallenbagel/jellyseerr
    tag: 1.7.0
  env:
    TZ: Europe/Berlin
    PUID: 1000
    PGID: 1000
  persistence:
    config:
      enabled: true
      accessMode: ReadWriteOnce
      size: 250Mi
      mountPath: /app/config
      annotations:
        'k8up.io/backup': 'true'
  service:
    main:
      ports:
        http:
          port: &port 5055
  probes:
    liveness: &probes
      enabled: true
      custom: true
      spec:
        httpGet:
          path: /ping
          port: *port
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3
    readiness: *probes
    startup:
      enabled: false
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        external-dns.alpha.kubernetes.io/target: "ipv4.serverton.de"
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: &host "jellyseerr.serverton.de"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: jellyseerr-tls-certificate
          hosts:
            - *host